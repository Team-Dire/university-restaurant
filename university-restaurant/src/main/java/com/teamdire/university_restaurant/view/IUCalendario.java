/*
 * Copyright (C) 2023 Daniel
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.teamdire.university_restaurant.view;

import com.teamdire.university_restaurant.controller.ControladorAutenticacao;
import com.teamdire.university_restaurant.controller.ControladorRefeicao;
import com.teamdire.university_restaurant.model.Refeicao;
import com.teamdire.university_restaurant.model.Usuario;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

/**
 *
 * @author Daniel
 */
public class IUCalendario extends javax.swing.JFrame {
    private final ArrayList<Refeicao> ponteirosRefeicoes;

    /**
     * Creates new form IUCalendario
     */
    public IUCalendario(String semana, ArrayList<Refeicao> refeicoes) {
        String laf = javax.swing.UIManager.getSystemLookAndFeelClassName();
        try {
            javax.swing.UIManager.setLookAndFeel(laf);
        } catch (Exception e) {
            e.printStackTrace();
        }

        initComponents();

        // Seta a label com um texto personalizado
        jLabel1.setText("Refeições da semana " + semana);

        // Converte para uma DefaultTableModel para que possamos trabalhar
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        // Seta o número de linhas
        model.setRowCount(refeicoes.size());
        // Criando um formatador de data
        SimpleDateFormat dtf = new SimpleDateFormat("dd/MM/yyyy");
        // Preenche a tabela com os dados
        for (int i = 0; i < refeicoes.size(); i++) {
            jTable1.setValueAt(dtf.format(refeicoes.get(i).getDataServentia().getTime()), i, 0);
            jTable1.setValueAt(refeicoes.get(i).getNome(), i, 1);
        }

        this.ponteirosRefeicoes = refeicoes;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        comprarTiqueteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Refeições da semana");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data de serventia", "Nome da refeição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Ver mais detalhes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        comprarTiqueteButton.setText("Comprar tiquete");
        comprarTiqueteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprarTiqueteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comprarTiqueteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(comprarTiqueteButton))
                .addGap(25, 25, 25))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Verifica se uma linha foi selecionada
        if (jTable1.getSelectedRow() == -1) return;
        Refeicao selecionada = this.ponteirosRefeicoes.get(jTable1.getSelectedRow());
        IUDetalhesRefeicao iu = new IUDetalhesRefeicao(selecionada);
        iu.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comprarTiqueteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprarTiqueteButtonActionPerformed
        if (jTable1.getSelectedRow() == -1) return;
        ControladorRefeicao controlador = new ControladorRefeicao();
        ControladorAutenticacao controladorAutenticacao = new ControladorAutenticacao();
        Usuario usuario = controladorAutenticacao.getUsuarioAutenticado();
        Refeicao selecionada = this.ponteirosRefeicoes.get(jTable1.getSelectedRow());

        String response = controlador.adicionarTiquete(usuario, selecionada);
        if(response == null){
            response = "Tiquete adquirido com sucesso!";
        }
        JOptionPane.showMessageDialog(null, response);
    }//GEN-LAST:event_comprarTiqueteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton comprarTiqueteButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
